<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABCNJREFUeF7t
        3YFt22YQxXGP4BE6QkfpBslo2aAjtBskG7QbJBu4d7p/7ihCn0RS94Uu/H4AgfiRPBrvIAWODedl6e3t
        7ZMdX+2Q27ybT9Q1jz3klYfJNt7VK/X14wGyz1fq62WDP8d8OeAzNfaxoetXxxc75r0c/6e8Ezv+9oIW
        +l8lDF7SMga8m6iocKoPcxOxDFBTIu7D3EQsA9SUiPswNxHLADUl4j7MTcQyQE2JuA9zE7EMUFMi7sPc
        RCwD1JSI+zA3EcsANSXiPsxNxDJATYm4D3MTsQxQUyLuw9xELAPUlIj7MDcRywA1JeI+zE3EMkBNibgP
        cxOxDFhFV9+uIO7D3EQsd1hNuRSiPsxNxPKAVXVZCh/28aFLxLKB1TXlO4ZXiOUs7CERy1nYQyKWs7CH
        RCxnYQ+JWFasmt/t+NOOv/zPxP1s+BViWbFq/omGLr7bMWcpMb8Qy4pV8280lOYsJWYXYlmxam79hGf/
        UmJuIZYbrJ75S4mZhVgGrKK5S4l5hVjusJrmLSVmFWJ5wKqas5SYU4hlA6urfykxoxDLRlZZ71Li/kIs
        O1htfUuJewux7GTV9Swl7ivEcoDV9/xS4p5CLAdZhc8tJa4vxPIEq/H4UuLaQixPsiqPLSWuK8TSwOrc
        v5S4phBLE6t031LifCGWRlbr9qXEuUIszazabUuJvBDLBFbv46VEVohlEqv4/lLi43IJfyF7pH+C/gl9
        dLGU+HOhp1+Gx0r4roW8Lz/ew0L8LevH5eEfm3dw/lvWR2MV3/pLPZbBBVcuoUxh9d5fhousEEszq/bx
        MlzkhVgaWa3bluHiXCGWJlbp9mW4OF+IpYHVuW8ZLq4pxPIkq3L/MlxcV4jlCVbjsWW4uLYQy0FW4fFl
        uLi+EMsBVt9zy3BxTyGWnay655fh4r5CLDtYbT3LcHFvIZaNrLK+Zbi4vxDLBlZX7zJczCjE8oBV1b8M
        F3MKsdxhNc1ZhotZhVgGrKJ5y3AxrxDLDVbP3GW4mFmIZcWqmb8MF3MLsaxQz1L/MlzMLsSyYtX4An6a
        swwX8wuxrFg1f9jhv4Dmmx1zluFs+BViOQt7SMRyFvaQiOUs7CERy1nYQyKWDawu/SLl98KqunyhyId9
        fOgSsdxhNeVX7UR9mJuIZcAquvonFOI+zE3EMkBNibgPcxOxDFBTIu7D3EQsA9SUiPswNxHLADUl4j7M
        TcQyQE2JuA9zE7EMUFMi7sPcRCwD1JSI+zA3EcsANSXiPsxNxDJATYm4D3MTsQxQUyLuw9xELAPUlIj7
        MDcRywA1JeI+zF165ZSsWDe/RUWFU31spv8UxZL/p1dayop3QjdL3zjdx4be+ok82ab/O4bOBq9fJfJY
        /6vjJxvuL0ctZTvvav7buj3E3760mDHvZs7b1MXLy3+6ORovJREk/gAAAABJRU5ErkJggg==
</value>
  </data>
</root>